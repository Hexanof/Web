// breakpoints.scss v1.0 | @ajlkn | MIT licensed */

// Vars.
/// Breakpoints.
/// @var {list}
$breakpoints: () !global;

// Mixins.

// Sets breakpoints.
/// @param {map} $x Breakpoints.
@mixin breakpoints($x: ()) {
  $breakpoints: $x !global;
}

/// Wraps @content in a @media block targeting a specific orientation.
/// @param {string} $orientation Orientation.
@mixin orientation($orientation) {
  @media screen and (orientation: #{$orientation}) {
    @content;
  }
}

/// Wraps @content in a @media block using a given query.
/// @param {string} $query Query.
@mixin breakpoint($query: null) {
  $breakpoint: null;
  $op: null;
  $media: null;

  // Determine operator, breakpoint.
  // Greater than or equal.
  @if (str-slice($query, 0, 2) == '>=') {
    $op: 'gte';
    $breakpoint: str-slice($query, 3);
  }

  // Less than or equal.
  @elseif str-slice($query, 0, 2) == '<=' {
    $op: 'lte';
    $breakpoint: str-slice($query, 3);
  }

  // Greater than.
  @elseif (str-slice($query, 0, 1) == '>') {
    $op: 'gt';
    $breakpoint: str-slice($query, 2);
  }

  // Less than.
  @elseif (str-slice($query, 0, 1) == '<') {
    $op: 'lt';
    $breakpoint: str-slice($query, 2);
  }

  // Not.
  @elseif (str-slice($query, 0, 1) == '!') {
    $op: 'not';
    $breakpoint: str-slice($query, 2);
  }

  // Equal.
  @else {
    $op: 'eq';
    $breakpoint: $query;
  }

  // Build media.
  @if ($breakpoint and map-has-key($breakpoints, $breakpoint)) {
    $a: map-get($breakpoints, $breakpoint);

    // Range.
    @if (type-of($a) == 'list') {
      $x: nth($a, 1);
      $y: nth($a, 2);

      // Max only.
      @if ($x == null) {
        @if ($op == 'gte') {
          $media: 'screen';
        }
        @elseif ($op == 'lte') {
          $media: 'screen and (max-width: ' + $y + ')';
        }
        @elseif ($op == 'gt') {
          $media: 'screen and (min-width: ' + ($y + 1) + ')';
        }
        @elseif ($op == 'lt') {
          $media: 'screen and (max-width: -1px)';
        }
        @elseif ($op == 'not') {
          $media: 'screen and (min-width: ' + ($y + 1) + ')';
        }
        @else {
          $media: 'screen and (max-width: ' + $y + ')';
        }
      }

      // Min only.
      @else if ($y == null) {
        @if ($op == 'gte') {
          $media: 'screen and (min-width: ' + $x + ')';
        }
        @elseif ($op == 'lte') {
          $media: 'screen';
        }
        @elseif ($op == 'gt') {
          $media: 'screen and (max-width: -1px)';
        }
        @elseif ($op == 'lt') {
          $media: 'screen and (max-width: ' + ($x - 1) + ')';
        }
        @elseif ($op == 'not') {
          $media: 'screen and (max-width: ' + ($x - 1) + ')';
        }
        @else {
          $media: 'screen and (min-width: ' + $x + ')';
        }
      }

      // Min and max.
      @else {
        @if ($op == 'gte') {
          $media: 'screen and (min-width: ' + $x + ')';
        }
        @elseif ($op == 'lte') {
          $media: 'screen and (max-width: ' + $y + ')';
        }
        @elseif ($op == 'gt') {
          $media: 'screen and (min-width: ' + ($y + 1) + ')';
        }